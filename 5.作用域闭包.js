闭包是基于词法作用域书写代码时的自然结果，

如何产生：
当函数可以记住并访问所在的词法作用域时，就产生了闭包，即使函数是在当前词法作用
域之外执行。

function foo() {
    var a = 2;
    function bar() {
        console.log( a );
    }
    return bar;
}
var baz = foo();
baz(); // 2 —— 旁友，这就是闭包

描述一下刚刚发生的故事：函数bar（）的词法作用域能够访问foo内部的作用域。将bar（）本身当做一个变量返回出来，执行foo（）将其返回值
赋值给 baz 并且执行。实际上就是执行了foo内部的bar函数，实现了 作用域外的执行

