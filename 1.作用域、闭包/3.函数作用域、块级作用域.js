
函数作用域的含义是指，属于这个函数的全部变量都可以在整个函数的范围内使用及复
用

function foo() {
    function bar(a) {
        i = 3; // 修改for 循环所属作用域中的i
        console.log( a + i );
    }
    for (var i=0; i<10; i++) {
        bar( i * 2 ); // 无限循环
    }
}
foo();

for循环的作用域是寄生在foo中的 所以重名变量的操作会产生冲突

如何解决：1.在全局作用域中声明一个名字特殊的变量，通常是个对象。 作为承载大量属性的容器，保护属性不受污染
2.模块机制：用特定的工具 利用作用域的规则将标识符注入到保持私有的无害的作用域中

自执行函数可以解决函数运行对当前作用域的污染，因为自执行函数的作用域是绑定在自己身上，而函数声明之后的调用则是绑定在当前作用域
上，会造成本函数名的污染

jquery等一些库、框架就是这么解决污染问题的

块级作用域：
with（）
try/catch 的catch语句会创建一个块级作用域

es6的let 和const 会将声明的变量绑定到任意块级作用域中 被{}包裹的块作用域

块级作用域的利用

1.垃圾回收，配合let 显示的声明一个块级作用 让作用域中的变量不用时快速回收